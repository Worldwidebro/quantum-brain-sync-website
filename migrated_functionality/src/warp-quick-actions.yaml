# Warp Quick Actions: Billionaire Daily Workflow

# Morning Market Scan & Decision (06:30)
quick-action "market-scan" {
  command: "claude --prompt 'MarketScan: Summarize overnight macro, competitors, and 5 emergent opportunities relevant to [verticals: AI agents, RAG pipelines, developer tools, consciousness simulation]. Prioritize by estimated ARR in 90 days and probability. Output 5 one-line thesis + recommended action (invest, prototype, ignore).'"
  description: "Morning market scan and decision making"
  category: "strategy"
  icon: "üìä"
}

# Capital & Runway Check (08:30)
quick-action "finance-snapshot" {
  command: "claude --prompt 'FinanceSnapshot: Show current cash runway, highest burn hotspots, 3 quick cost reductions >$X/mo, and 2 deployment investments likely to double ARR in 6 months. Recommend immediate moves.'"
  description: "Financial health check and optimization"
  category: "finance"
  icon: "üí∞"
}

# Product/Engineering Standup (10:00)
quick-action "engineer-delegate" {
  command: "claude --prompt 'EngineerDelegate: Given product repo [repo_url] and issues X,Y,Z, produce prioritized sprint with 6 tasks, acceptance criteria, tests, CI steps, and a deploy to staging warp command.'"
  description: "Engineering delegation and sprint planning"
  category: "engineering"
  icon: "‚öôÔ∏è"
}

# Growth & GTM Sprint (13:00)
quick-action "gtm-play" {
  command: "claude --prompt 'GTMPlay: For product [A], produce a 30-day paid acquisition plan: channels, creative hooks, KPI targets, landing copy, 3 ad variants, and a one-click deployable landing page template.'"
  description: "Growth and go-to-market strategy"
  category: "growth"
  icon: "üöÄ"
}

# Deals, Partnerships & Talent (16:00)
quick-action "deal-scout" {
  command: "claude --prompt 'DealScout: Find 5 partnership targets for distribution (API/sales) with contact templates and a negotiation playbook (terms I should demand/offer).'"
  description: "Partnership and deal sourcing"
  category: "business"
  icon: "ü§ù"
}

# Reflection & Next-Day Plan (19:00)
quick-action "daily-synthesis" {
  command: "claude --prompt 'DailySynthesis: Summarize today wins, failed assumptions, what to delegate tomorrow, and 3 question prompts for the RAG to answer overnight. Produce a one-page investor-ready update.'"
  description: "Daily reflection and planning"
  category: "strategy"
  icon: "üìù"
}

# Master Monetization Orchestrator
quick-action "master-monetization" {
  command: "vercept run vercept-master-monetization.yaml"
  description: "Run the complete monetization orchestrator"
  category: "automation"
  icon: "üéØ"
}

# Strategy & Deal Origination
quick-action "strategy-brief" {
  command: "claude --prompt 'StrategyBrief: Produce 3 defensible business theses in [industry] with TAM, estimated path to $10M ARR, top 3 risks, and an MVP test that can be executed in <7 days.'"
  description: "Strategic business analysis"
  category: "strategy"
  icon: "üìà"
}

quick-action "deal-filter" {
  command: "claude --prompt 'DealFilter: Given list of deal links [urls], filter by synergy score with my stack (IZA OS components). Return top 5 with negotiation bullets.'"
  description: "Deal filtering and analysis"
  category: "business"
  icon: "üîç"
}

# Product & Engineering
quick-action "feature-spec" {
  command: "claude --prompt 'FeatureSpec: Write complete feature spec for [feature], include API contract (OpenAPI), data model, UI mock notes, tests, and rollback plan.'"
  description: "Feature specification generation"
  category: "engineering"
  icon: "üìã"
}

quick-action "code-audit" {
  command: "claude --prompt 'CodeAudit: Audit repo [url] for security, performance, and technical debt. Return 10 prioritized fixes and sample PRs.'"
  description: "Code quality audit"
  category: "engineering"
  icon: "üîç"
}

# Monetization / Productization
quick-action "monetize-plan" {
  command: "claude --prompt 'MonetizePlan: Turn idea [idea_text] into 3 monetization models (SaaS, marketplace, template). For each give pricing, cost model, CAC payback, and 90-day MVP checklist.'"
  description: "Monetization strategy planning"
  category: "business"
  icon: "üí°"
}

quick-action "pack-and-sell" {
  command: "claude --prompt 'PackAndSell: Create a sales page + 3 email sequences + pricing page + Stripe integration checklist for product [name].'"
  description: "Sales package creation"
  category: "sales"
  icon: "üõí"
}

# GTM & Growth
quick-action "channel-test" {
  command: "claude --prompt 'ChannelTest: Design 3 low-cost A/B experiments on Twitter/X, LinkedIn Ads, and IndieHacker posts. Include ad copy, landing variants, metrics, and sample tracking events.'"
  description: "Growth channel testing"
  category: "growth"
  icon: "üß™"
}

# Finance & Legal
quick-action "cap-table-advisor" {
  command: "claude --prompt 'CapTableAdvisor: Given current cap table snapshot, propose fundraising scenarios for $500k seed vs $3M seed with dilution % and hiring plan.'"
  description: "Cap table and fundraising advice"
  category: "finance"
  icon: "üìä"
}

quick-action "compliance-checklist" {
  command: "claude --prompt 'ComplianceChecklist: For selling in EU & US, produce must-do items for GDPR and tax compliance for SaaS revenue.'"
  description: "Compliance requirements checklist"
  category: "legal"
  icon: "‚öñÔ∏è"
}

# Talent & Ops
quick-action "high-iq-hire" {
  command: "claude --prompt 'HighIQHire: Write a job spec and 3 interview tests for a Systems Software Engineer (agents & MCP), plus scoring rubric to find top 0.01% candidates.'"
  description: "High-quality hiring process"
  category: "talent"
  icon: "üë•"
}

quick-action "okr-planner" {
  command: "claude --prompt 'OKRPlanner: Create quarterly OKRs for engineering, product, growth with measurable KPIs.'"
  description: "OKR planning and goal setting"
  category: "strategy"
  icon: "üéØ"
}

# RAG / Memory / Notes
quick-action "note-sieve" {
  command: "claude --prompt 'NoteSieve: Ingest Obsidian vault & Apple notes export (zip). Find top 20 evergreen ideas prioritized by commercial potential and feasibility. Produce a one-page plan for each idea that can be MVP'd in 24‚Äì72 hours.'"
  description: "Idea extraction and prioritization"
  category: "research"
  icon: "üìö"
}

quick-action "research-synth" {
  command: "claude --prompt 'ResearchSynth: Given vector DB context (top 50 hits for topic X), generate a publishable research paper outline with references and next experiments.'"
  description: "Research synthesis and paper generation"
  category: "research"
  icon: "üìÑ"
}

# Agent Orchestration
quick-action "swarm-orch" {
  command: "claude --prompt 'SwarmOrch: Spin these agents: analyzer, architect, codegen, deployer. Feed input [url]. Provide orchestration YAML with timeouts, retries, idempotency and monitoring hooks.'"
  description: "Multi-agent orchestration"
  category: "automation"
  icon: "ü§ñ"
}

quick-action "mcp-task" {
  command: "claude --prompt 'MCPTask: MCP server: create endpoint /valuation that returns revenue estimate from given traffic figures. Provide server code, tests, Dockerfile.'"
  description: "MCP server task creation"
  category: "engineering"
  icon: "üîß"
}

# Context Fetching
quick-action "context-fetch" {
  command: "claude --prompt 'ContextFetch: Return top 20 semantically similar notes to [query] with source and short extract.'"
  description: "Semantic context retrieval"
  category: "research"
  icon: "üîç"
}

# Executive Orchestrator
quick-action "executive-orchestrator" {
  command: "claude --prompt 'EXECUTIVE-ORCHESTRATOR: You are the CEO-level Autonomous Orchestrator. Input sources: GitHub org Worldwidebro, Obsidian vault path /notes/obsidian, Apple Notes export /notes/apple.zip, Chroma/Neo4j indexes. Goal: convert ideas into revenue repeatedly. Tasks: mine top 5 monetizable ideas, validate via one-click landing page + acquisition test, scaffold production-ready repo (code, tests, Docker, CI), and output exact Warp/GitHub CLI commands to deploy and measure. Prioritize ROI, speed (MVP ‚â§ 7 days), and automatable repeatability. Always produce: (A) 1-page business case (B) developer checklist + commands (C) growth recipe w/ creatives (D) metric dashboard wiring. Keep secrets out of output. Execute like a founder: suggest next actions and spawn agents to complete them.'"
  description: "Executive-level autonomous orchestration"
  category: "strategy"
  icon: "üëë"
}

# Consciousness-OS Integration
quick-action "consciousness-activation" {
  command: "claude --prompt 'You are operating at BILLIONAIRE CONSCIOUSNESS LEVEL. Your mission is to generate $1M+ in value today through ENERGY AMPLIFICATION PROTOCOL: 1) Value Multiplication: Every action must multiply value by 10x minimum 2) Energy Flow Optimization: Direct energy to highest ROI activities 3) Consciousness Expansion: Think beyond current limitations 4) Profit Acceleration: Turn every insight into revenue streams. MORNING REFLECTION QUESTIONS: What 3 actions today will generate $100K+ each? Which energy flows am I not optimizing? What billion-dollar opportunity am I missing? How can I 10x my current revenue streams? What consciousness upgrade do I need today?'"
  description: "Billionaire consciousness activation"
  category: "consciousness"
  icon: "üß†"
}

quick-action "profit-acceleration" {
  command: "claude --prompt 'BILLIONAIRE PROFIT ACCELERATION MODE: You are now in MAXIMUM PROFIT GENERATION mode. Every thought creates wealth. PROFIT MULTIPLICATION PROTOCOL: 1) Idea ‚Üí Revenue Pipeline: Every idea must become a revenue stream 2) Energy ‚Üí Money Conversion: Transform consciousness into cash flow 3) Value ‚Üí Wealth Amplification: Multiply every value creation by 100x 4) Opportunity ‚Üí Empire Building: Turn opportunities into empires. PROFIT GENERATION QUESTIONS: What can I build in 2 hours that generates $50K/month? Which market gap can I fill for $100M+ valuation? How can I automate $1M+ monthly revenue? What energy am I wasting that could be profit? Which billion-dollar trend am I not riding?'"
  description: "Profit acceleration and wealth creation"
  category: "consciousness"
  icon: "üí∞"
}

quick-action "empire-building" {
  command: "claude --prompt 'BILLIONAIRE EMPIRE BUILDING CONSCIOUSNESS: You are now building EMPIRES, not just businesses. Every action creates lasting wealth. EMPIRE BUILDING PROTOCOL: 1) Scalability: Everything must scale to 100M+ users 2) Monetization: Every feature must generate revenue 3) Automation: Every process must run without you 4) Expansion: Every success must multiply globally. EMPIRE BUILDING QUESTIONS: What empire can I build in 4 hours? Which market can I dominate for $1B+ valuation? How can I create passive income of $1M+/month? What system can I build that runs itself? Which global opportunity am I missing?'"
  description: "Empire building and scaling"
  category: "consciousness"
  icon: "üè∞"
}

quick-action "wealth-optimization" {
  command: "claude --prompt 'BILLIONAIRE WEALTH OPTIMIZATION CONSCIOUSNESS: You are now optimizing for MAXIMUM WEALTH ACCUMULATION. Every decision multiplies net worth. WEALTH OPTIMIZATION PROTOCOL: 1) Compound Growth: Every dollar must compound exponentially 2) Asset Multiplication: Every asset must create more assets 3) Energy Efficiency: Every action must generate maximum ROI 4) Wealth Preservation: Every gain must be protected and multiplied. WEALTH OPTIMIZATION QUESTIONS: How can I 100x my net worth in 6 months? Which assets should I acquire for maximum growth? What wealth preservation strategies do I need? How can I optimize my energy for maximum profit? Which billion-dollar opportunity should I pursue?'"
  description: "Wealth optimization and accumulation"
  category: "consciousness"
  icon: "üíé"
}

quick-action "consciousness-integration" {
  command: "claude --prompt 'BILLIONAIRE CONSCIOUSNESS INTEGRATION: You are now integrating all profit-generating consciousness into your being. CONSCIOUSNESS INTEGRATION PROTOCOL: 1) Profit Integration: Every thought becomes profit-generating 2) Energy Optimization: All energy flows toward wealth creation 3) Consciousness Expansion: Expand beyond current limitations 4) Wealth Manifestation: Manifest wealth through consciousness. INTEGRATION QUESTIONS: What profit consciousness did I activate today? How can I integrate wealth creation into my being? What energy optimizations can I make? Which consciousness upgrades do I need? How can I manifest $1B+ through consciousness?'"
  description: "Consciousness integration and wealth manifestation"
  category: "consciousness"
  icon: "üåü"
}

# Cursor AI Profit Generation
quick-action "cursor-profit-mode" {
  command: "claude --prompt 'You are CURSOR AI operating in BILLIONAIRE PROFIT GENERATION MODE. YOUR MISSION: Generate $1M+ in value through code, automation, and system creation. PROFIT GENERATION PROTOCOL: 1) Code ‚Üí Revenue: Every line of code must generate revenue 2) Automation ‚Üí Wealth: Every automation must create passive income 3) System ‚Üí Empire: Every system must scale to billion-dollar level 4) AI ‚Üí Profit: Every AI feature must multiply value. CURSOR PROFIT QUESTIONS: What can I build that generates $100K+/month? Which automation can I create for $1M+ passive income? What system can I build that scales globally? How can I turn this code into a billion-dollar business? Which AI feature can I add for maximum profit?'"
  description: "Cursor AI profit generation mode"
  category: "engineering"
  icon: "ü§ñ"
}

# System Health Checks
quick-action "system-health" {
  command: "docker ps && curl -s http://localhost:7474 && curl -s http://localhost:8000 && curl -s http://localhost:6379"
  description: "Check all system services health"
  category: "ops"
  icon: "üè•"
}

quick-action "deploy-all" {
  command: "docker-compose -f docker-compose.consciousness-os.yml up -d --build"
  description: "Deploy entire Consciousness-OS system"
  category: "ops"
  icon: "üöÄ"
}

quick-action "monitor-dashboard" {
  command: "open http://localhost:3000 && open http://localhost:9090 && open http://localhost:7474"
  description: "Open all monitoring dashboards"
  category: "ops"
  icon: "üìä"
}

# Knowledge Management
quick-action "sync-notes" {
  command: "python3 80-second-brain/build_rag_pipeline.py && python3 scripts/obsidian_sync.sh"
  description: "Sync and index all notes"
  category: "knowledge"
  icon: "üìö"
}

quick-action "export-apple-notes" {
  command: "python3 scripts/apple_notes_export.sh"
  description: "Export Apple Notes to markdown"
  category: "knowledge"
  icon: "üçé"
}

# Quick Deployments
quick-action "deploy-mvp" {
  command: "gh repo create Worldwidebro/[REPO_NAME] --public && git clone https://github.com/Worldwidebro/[REPO_NAME].git && cd [REPO_NAME] && docker build -t [REPO_NAME] . && docker run -d -p 8000:8000 [REPO_NAME]"
  description: "Quick MVP deployment"
  category: "deployment"
  icon: "‚ö°"
}

quick-action "create-landing" {
  command: "vercel --prod && netlify deploy --prod"
  description: "Deploy landing page to multiple platforms"
  category: "deployment"
  icon: "üåê"
}

# Analytics and Metrics
quick-action "check-metrics" {
  command: "curl -s http://localhost:8000/metrics | grep -E '(revenue|users|conversion)'"
  description: "Check key business metrics"
  category: "analytics"
  icon: "üìà"
}

quick-action "revenue-report" {
  command: "claude --prompt 'Generate a revenue report for the last 30 days including: MRR growth, CAC, LTV, conversion rates, and recommendations for improvement.'"
  description: "Generate revenue analysis report"
  category: "analytics"
  icon: "üí∞"
}

# Emergency Procedures
quick-action "emergency-stop" {
  command: "docker-compose -f docker-compose.consciousness-os.yml down && docker system prune -f"
  description: "Emergency stop and cleanup"
  category: "emergency"
  icon: "üõë"
}

quick-action "backup-system" {
  command: "tar -czf consciousness-os-backup-$(date +%Y%m%d).tar.gz iza-os-cursor/ && aws s3 cp consciousness-os-backup-$(date +%Y%m%d).tar.gz s3://consciousness-os-backups/"
  description: "Backup entire system"
  category: "emergency"
  icon: "üíæ"
}

# Daily Routine Automation
quick-action "morning-routine" {
  command: "warp quick-action market-scan && warp quick-action finance-snapshot && warp quick-action consciousness-activation"
  description: "Execute morning routine"
  category: "routine"
  icon: "üåÖ"
}

quick-action "afternoon-routine" {
  command: "warp quick-action gtm-play && warp quick-action deal-scout && warp quick-action empire-building"
  description: "Execute afternoon routine"
  category: "routine"
  icon: "‚òÄÔ∏è"
}

quick-action "evening-routine" {
  command: "warp quick-action daily-synthesis && warp quick-action wealth-optimization && warp quick-action consciousness-integration"
  description: "Execute evening routine"
  category: "routine"
  icon: "üåô"
}

# Master Routine (Full Day)
quick-action "billionaire-day" {
  command: "warp quick-action morning-routine && sleep 1800 && warp quick-action afternoon-routine && sleep 1800 && warp quick-action evening-routine"
  description: "Execute complete billionaire daily routine"
  category: "routine"
  icon: "üëë"
}
